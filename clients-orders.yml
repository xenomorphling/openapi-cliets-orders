openapi: 3.0.2
info:
    title: Clients-Orders
    version: 1.0.1
    description: |-
        Работа с клиентами


        создание нового клиента 
        получение информации о клиенте по его идентификатору (логин)  
        обновление данных клиента  
        удаление клиента


        Работа с заказами


        создание нового заказа  
        получение информации о заказе  
        редактирование заказа  
        отмена заказа


        1. В названиях ресурсов (например /order) не используются лучшие практики.
        2. при создании клиента не передается ничего, ни id ни логина ни имени, не указан код ответа.
        3. при получении данных клиента не указаны какие данные о нем получаем.
        4. при обновлении клиента не указано какие поля обновляем
        5. в работе с заказами указано задание "отмена заказа" а не удаление.
        6. при создании заказа не указаны данные заказа которые передаются для этого
        7. при редактировании заказа не указыватся данные которые редактируются

        fixes:
        1. Исправлено единственное число в именовании на множественное
        2. Исправлено создание клиента, добавлен код ответа
        3. Добавлен content в код ответа запроса о клиенте
        4. При обновлении указано 
                parameters:
                -
                    name: login
                    description: name that need to be updated
                    in: path
                    required: true
                    type: string
                -
                    name: body
                    description: Updated client login object
                    schema:
                        $ref: '#/definitions/Clients'
                    in: body
                    required: true
        5. Добавлено изменение статуса заказа на "Cancelled"
        6. Добавлены параметры в post заказа
        7. Добавлены параметры в put заказа
            
        
    contact:
        email: ymatsyuk@luxoft.com
paths:
    /clients:
        post:
            tags:
                - clients
            parameters:
                -
                    name: body
                    description: Clients object
                    schema:
                        $ref: '#/definitions/Clients'
                    in: body
                    required: true
            responses:
                default:
                    description: successful operation
            operationId: createClient
            summary: Create client
            description: This can only be done by the logged in user.
            produces:
                - application/xml
                - application/json
    '/clients/{username}':
        get:
            tags:
                - clients
            parameters:
                -
                    name: login
                    description: Client login
                    in: path
                    required: true
                    type: string
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/definitions/Clients'
                    description: Username response
                    schema:
                        $ref: '#/definitions/Clients'
                '400':
                    description: Invalid login supplied
                '404':
                    description: Login not found
            operationId: getClientsByName
            summary: Get clients by client name
            description: ''
            produces:
                - application/xml
                - application/json
        put:
            tags:
                - clients
            parameters:
                -
                    name: login
                    description: name that need to be updated
                    in: path
                    required: true
                    type: string
                -
                    name: body
                    description: Updated client login object
                    schema:
                        $ref: '#/definitions/Clients'
                    in: body
                    required: true
            responses:
                '400':
                    description: Invalid user supplied
                '404':
                    description: User not found
            operationId: updateUser
            summary: Updated user
            description: This can only be done by the logged in user.
            produces:
                - application/xml
                - application/json
        delete:
            tags:
                - user
            parameters:
                -
                    name: username
                    description: The name that needs to be deleted
                    in: path
                    required: true
                    type: string
            responses:
                '400':
                    description: Invalid username supplied
                '404':
                    description: Client not found
            operationId: deleteClient
            summary: Delete client
            description: This can only be done by the logged in user.
            produces:
                - application/xml
                - application/json
    /clients/create:
        post:
            requestBody:
                description: Add client
                content:
                    application/json:
                        schema:
                            $ref: '#/definitions/Clients'
                required: true
            responses:
                default:
                    description: successful operation
                '200':
                    content:
                        application/json:
                            schema:
                                $ref: '#/definitions/Clients'
                    description: response
                '400':
                    content:
                        application/json:
                            schema:
                                $ref: '#/definitions/Clients'
                    description: bad request
            operationId: addClient
            description: Adds a client
            produces:
                - application/xml
                - application/json
    /clients/login:
        get:
            tags:
                - clients
            parameters:
                -
                    name: login
                    description: The client name for login
                    in: query
                    required: true
                    type: string
                -
                    name: password
                    description: The password for login in clear text
                    in: query
                    required: true
                    type: string
            responses:
                '200':
                    headers:
                        X-Rate-Limit:
                            description: calls per hour allowed by the user
                        X-Expires-After:
                            description: date in UTC when token expires
                    description: successful operation
                    schema:
                        type: string
                '400':
                    description: Invalid username/password supplied
            operationId: loginClient
            summary: Logs client into the system
            description: ''
            produces:
                - application/xml
                - application/json
    /clients/logout:
        get:
            tags:
                - client
            responses:
                default:
                    description: successful operation
            operationId: logoutClient
            summary: Logs out current logged in client session
            description: ''
            produces:
                - application/xml
                - application/json
    /order:
        post:
            tags:
                - order
            parameters:
                -
                    name: orderId
                    description: ID of order
                    in: path
                    required: true
                    type: integer
                    maximum: 10
                    minimum: 1
                    format: int64
                -
                    name: body
                    description: order placed
                    schema:
                        $ref: '#/definitions/Order'
                    in: body
                    required: true
                -
                    name: status
                    description: status of order
                    in: body
                    schema:
                        $ref: '#/definitions/Order'
                    required: false
            responses:
                '200':
                    description: successful operation
                    schema:
                        $ref: '#/definitions/Order'
                '400':
                    description: Invalid Order
            operationId: placeOrder
            summary: Place an order
            description: ''
            produces:
                - application/xml
                - application/json
    '/order/{orderId}':
        get:
            tags:
                - order
            parameters:
                -
                    name: orderId
                    description: ID of order
                    in: path
                    required: true
                    type: integer
                    maximum: 10
                    minimum: 1
                    format: int64
            responses:
                '200':
                    description: successful operation
                    schema:
                        $ref: '#/definitions/Order'
                '400':
                    description: Invalid ID supplied
                '404':
                    description: Order not found
            operationId: getOrderById
            summary: Find purchase order by ID
            description: >-
                For valid response try integer IDs with value >= 1 and <= 10.         Other values will
                generated exceptions
            produces:
                - application/xml
                - application/json
        put:
            tags:
                - order
            parameters:
                -
                    name: orderID
                    description: order that need to be updated
                    in: path
                    required: true
                    type: string
                -
                    name: body
                    description: Updated order object
                    schema:
                        $ref: '#/definitions/Order'
                    in: body
                    required: true
                -   
                    name: status
                    description: status of order
                    in: body
                    schema:
                        $ref: '#/definitions/Order'
                    required: false
            responses:
                '400':
                    description: Invalid orderID supplied
                '404':
                    description: Order not found
            operationId: updateOrder
            summary: Updated order
            description: >-
                For valid response try integer IDs with positive integer value.         Negative or
                non-integer values will generate API errors
            produces:
                - application/xml
                - application/json
        delete:
            tags:
                - order
            parameters:
                -
                    name: orderId
                    description: ID of the order that needs to be deleted
                    in: path
                    required: true
                    type: integer
                    minimum: 1
                    format: int64
            responses:
                '400':
                    description: Invalid ID supplied
                '404':
                    description: Order not found
            operationId: deleteOrder
            summary: Delete purchase order by ID
            description: >-
                For valid response try integer IDs with positive integer value.         Negative or
                non-integer values will generate API errors
            produces:
                - application/xml
                - application/json
tags:
    -
        name: order
        description: Access to orders
    -
        name: clients
        description: Operations about user
schemas:
    - https
    - http
securityDefinitions:
    auth:
        type: oauth2
        authorizationUrl: ''
        flow: implicit
        scopes:
            'write:orders': manage orders in your account
            'read:orders': read your orders
    api_key:
        type: apiKey
        name: api_key
        in: header
definitions:
    Order:
        type: object
        properties:
            id:
                type: integer
                format: int64
            quantity:
                type: integer
                format: int32
            shipDate:
                type: string
                format: date-time
            status:
                type: string
                description: Order Status
                enum:
                    - placed
                    - approved
                    - delivered
                    - cancelled
            complete:
                type: boolean
                default: false
        xml:
            name: Order
    Category:
        type: object
        properties:
            id:
                type: integer
                format: int64
            name:
                type: string
        xml:
            name: Category
    Clients:
        type: object
        properties:
            id:
                type: integer
                format: int64
            username:
                type: string
            firstName:
                type: string
            lastName:
                type: string
            email:
                type: string
            password:
                type: string
            phone:
                type: string
            userStatus:
                type: integer
                format: int32
                description: User Status
        xml:
            name: Clients
    Tag:
        type: object
        properties:
            id:
                type: integer
                format: int64
            name:
                type: string
        xml:
            name: Tag
    ApiResponse:
        type: object
        properties:
            code:
                type: integer
                format: int32
            type:
                type: string
            message:
                type: string
